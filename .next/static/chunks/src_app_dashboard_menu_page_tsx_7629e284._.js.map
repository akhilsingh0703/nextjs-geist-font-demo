{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/dashboard/menu/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\n\ninterface MenuItem {\n  id: number;\n  name: string;\n  description: string;\n  category: string;\n  quarterPrice: number;\n  halfPrice: number;\n  fullPrice: number;\n  isActive: boolean;\n  createdAt: Date;\n}\n\nconst MenuPage: React.FC = () => {\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([\n    {\n      id: 1,\n      name: 'Margherita Pizza',\n      description: 'Classic pizza with tomato sauce, mozzarella, and fresh basil',\n      category: 'Pizza',\n      quarterPrice: 8.99,\n      halfPrice: 15.99,\n      fullPrice: 24.99,\n      isActive: true,\n      createdAt: new Date(),\n    },\n    {\n      id: 2,\n      name: 'Chicken Burger',\n      description: 'Grilled chicken breast with lettuce, tomato, and mayo',\n      category: 'Burgers',\n      quarterPrice: 6.99,\n      halfPrice: 12.99,\n      fullPrice: 18.99,\n      isActive: true,\n      createdAt: new Date(),\n    },\n  ]);\n\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingItem, setEditingItem] = useState<MenuItem | null>(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    category: '',\n    quarterPrice: 0,\n    halfPrice: 0,\n    fullPrice: 0,\n  });\n\n  const categories = ['Pizza', 'Burgers', 'Pasta', 'Salads', 'Beverages', 'Desserts'];\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: name.includes('Price') ? parseFloat(value) || 0 : value,\n    }));\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      if (!formData.name || !formData.description || !formData.category) {\n        throw new Error('Please fill in all required fields');\n      }\n\n      if (formData.quarterPrice <= 0 || formData.halfPrice <= 0 || formData.fullPrice <= 0) {\n        throw new Error('All prices must be greater than 0');\n      }\n\n      if (editingItem) {\n        // Update existing item\n        setMenuItems(prev => prev.map(item => \n          item.id === editingItem.id \n            ? { ...item, ...formData }\n            : item\n        ));\n        setEditingItem(null);\n      } else {\n        // Add new item\n        const newItem: MenuItem = {\n          id: Date.now(),\n          ...formData,\n          isActive: true,\n          createdAt: new Date(),\n        };\n        setMenuItems(prev => [...prev, newItem]);\n      }\n\n      // Reset form\n      setFormData({\n        name: '',\n        description: '',\n        category: '',\n        quarterPrice: 0,\n        halfPrice: 0,\n        fullPrice: 0,\n      });\n      setShowAddForm(false);\n    } catch (error) {\n      alert(error instanceof Error ? error.message : 'An error occurred');\n    }\n  };\n\n  const handleEdit = (item: MenuItem) => {\n    setEditingItem(item);\n    setFormData({\n      name: item.name,\n      description: item.description,\n      category: item.category,\n      quarterPrice: item.quarterPrice,\n      halfPrice: item.halfPrice,\n      fullPrice: item.fullPrice,\n    });\n    setShowAddForm(true);\n  };\n\n  const toggleItemStatus = (id: number) => {\n    setMenuItems(prev => prev.map(item => \n      item.id === id ? { ...item, isActive: !item.isActive } : item\n    ));\n  };\n\n  const deleteItem = (id: number) => {\n    if (confirm('Are you sure you want to delete this menu item?')) {\n      setMenuItems(prev => prev.filter(item => item.id !== id));\n    }\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">Menu Management</h1>\n        <button\n          onClick={() => {\n            setShowAddForm(!showAddForm);\n            setEditingItem(null);\n            setFormData({\n              name: '',\n              description: '',\n              category: '',\n              quarterPrice: 0,\n              halfPrice: 0,\n              fullPrice: 0,\n            });\n          }}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n        >\n          {showAddForm ? 'Cancel' : 'Add New Item'}\n        </button>\n      </div>\n\n      {showAddForm && (\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\n          <h2 className=\"text-xl font-semibold mb-4\">\n            {editingItem ? 'Edit Menu Item' : 'Add New Menu Item'}\n          </h2>\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Item Name *\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Category *\n                </label>\n                <select\n                  name=\"category\"\n                  value={formData.category}\n                  onChange={handleInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  required\n                >\n                  <option value=\"\">Select Category</option>\n                  {categories.map(cat => (\n                    <option key={cat} value={cat}>{cat}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Description *\n              </label>\n              <textarea\n                name=\"description\"\n                value={formData.description}\n                onChange={handleInputChange}\n                rows={3}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                required\n              />\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Quarter Price ($) *\n                </label>\n                <input\n                  type=\"number\"\n                  name=\"quarterPrice\"\n                  value={formData.quarterPrice}\n                  onChange={handleInputChange}\n                  step=\"0.01\"\n                  min=\"0\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Half Price ($) *\n                </label>\n                <input\n                  type=\"number\"\n                  name=\"halfPrice\"\n                  value={formData.halfPrice}\n                  onChange={handleInputChange}\n                  step=\"0.01\"\n                  min=\"0\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Full Price ($) *\n                </label>\n                <input\n                  type=\"number\"\n                  name=\"fullPrice\"\n                  value={formData.fullPrice}\n                  onChange={handleInputChange}\n                  step=\"0.01\"\n                  min=\"0\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                type=\"submit\"\n                className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                {editingItem ? 'Update Item' : 'Add Item'}\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setShowAddForm(false);\n                  setEditingItem(null);\n                }}\n                className=\"px-6 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition-colors\"\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      <div className=\"bg-white rounded-lg shadow-sm border\">\n        <div className=\"p-6 border-b border-gray-200\">\n          <h2 className=\"text-xl font-semibold\">Menu Items ({menuItems.length})</h2>\n        </div>\n        <div className=\"divide-y divide-gray-200\">\n          {menuItems.map((item) => (\n            <div key={item.id} className=\"p-6\">\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-3\">\n                    <h3 className=\"text-lg font-semibold text-gray-900\">{item.name}</h3>\n                    <span className=\"px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded-full\">\n                      {item.category}\n                    </span>\n                    <span className={`px-2 py-1 text-xs rounded-full ${\n                      item.isActive \n                        ? 'bg-green-100 text-green-800' \n                        : 'bg-red-100 text-red-800'\n                    }`}>\n                      {item.isActive ? 'Active' : 'Inactive'}\n                    </span>\n                  </div>\n                  <p className=\"text-gray-600 mt-1\">{item.description}</p>\n                  <div className=\"flex items-center space-x-6 mt-3\">\n                    <div className=\"text-sm\">\n                      <span className=\"font-medium text-gray-700\">Quarter:</span>\n                      <span className=\"ml-1 text-gray-900\">${item.quarterPrice.toFixed(2)}</span>\n                    </div>\n                    <div className=\"text-sm\">\n                      <span className=\"font-medium text-gray-700\">Half:</span>\n                      <span className=\"ml-1 text-gray-900\">${item.halfPrice.toFixed(2)}</span>\n                    </div>\n                    <div className=\"text-sm\">\n                      <span className=\"font-medium text-gray-700\">Full:</span>\n                      <span className=\"ml-1 text-gray-900\">${item.fullPrice.toFixed(2)}</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-2 ml-4\">\n                  <button\n                    onClick={() => handleEdit(item)}\n                    className=\"px-3 py-1 text-sm bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors\"\n                  >\n                    Edit\n                  </button>\n                  <button\n                    onClick={() => toggleItemStatus(item.id)}\n                    className={`px-3 py-1 text-sm rounded transition-colors ${\n                      item.isActive\n                        ? 'bg-red-100 text-red-700 hover:bg-red-200'\n                        : 'bg-green-100 text-green-700 hover:bg-green-200'\n                    }`}\n                  >\n                    {item.isActive ? 'Deactivate' : 'Activate'}\n                  </button>\n                  <button\n                    onClick={() => deleteItem(item.id)}\n                    className=\"px-3 py-1 text-sm bg-red-100 text-red-700 rounded hover:bg-red-200 transition-colors\"\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MenuPage;\n"],"names":[],"mappings":"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","debugId":null}}]
}